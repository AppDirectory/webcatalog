const{app,dialog,shell}=require('electron'),semver=require('semver'),https=require('https'),shouldUseSquirrel=(a)=>{return'linux'!==process.platform&&!0!==a},checkForUpdate=({mainWindow:a,log:b,isWebView:c,isDevelopment:d,isTesting:e})=>{d||e||a.webContents.once('did-finish-load',()=>{setTimeout(()=>{if(shouldUseSquirrel(c)){const f=require('electron-auto-updater').autoUpdater;f.addListener('update-downloaded',(g,h,i)=>{dialog.showMessageBox({type:'info',buttons:['Yes','Cancel'],defaultId:1,title:'A new update is ready to install',message:`Version ${i} is downloaded and will be automatically installed. Do you want to quit the app to install it now?`},(j)=>{0===j&&f.quitAndInstall()})}),f.addListener('error',(g)=>b(`Update error: ${g.message}`)),f.on('checking-for-update',()=>b('Checking for update')),f.on('update-available',()=>b('Update available')),f.on('update-not-available',()=>b('No update available')),f.checkForUpdates()}else https.get({host:'api.github.com',path:'/repos/webcatalog/webcatalog/releases/latest',method:'GET',headers:{'user-agent':`WebCatalog/${app.getVersion()}`}},(f)=>{if(200<=f.statusCode&&299>=f.statusCode){let g='';f.on('data',(h)=>{g+=h}),f.on('end',()=>{const{tag_name:h}=JSON.parse(g),i=h.slice(1);b(`Lastest version ${i}`),semver.gt(i,app.getVersion())&&dialog.showMessageBox({type:'info',buttons:['Yes','Cancel'],defaultId:1,title:'A new update is ready to install',message:`WebCatalog ${i} is now available. Do you want to go to the website and download now?`},(j)=>{0===j&&shell.openExternal('https://getwebcatalog.com')})})}}).on('error',(f)=>{b(`Update checker: ${f.message}`)})},1e3)})};module.exports=checkForUpdate;